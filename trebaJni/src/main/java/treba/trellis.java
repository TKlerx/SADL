/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package treba;

public class trellis {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected trellis(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(trellis obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        trebaJNI.delete_trellis(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFp(double value) {
    trebaJNI.trellis_fp_set(swigCPtr, this, value);
  }

  public double getFp() {
    return trebaJNI.trellis_fp_get(swigCPtr, this);
  }

  public void setBp(double value) {
    trebaJNI.trellis_bp_set(swigCPtr, this, value);
  }

  public double getBp() {
    return trebaJNI.trellis_bp_get(swigCPtr, this);
  }

  public void setBackstate(int value) {
    trebaJNI.trellis_backstate_set(swigCPtr, this, value);
  }

  public int getBackstate() {
    return trebaJNI.trellis_backstate_get(swigCPtr, this);
  }

  public trellis() {
    this(trebaJNI.new_trellis(), true);
  }

}
